# Compute fibonacci numbers entirely in cpu registers, and output the last one to the bus at 0x0000.
# Unrolls a loop

	# a: fib(n-1)
	# b: fib(n)
	# c: fib(n+1)
	# d: 0x0000 and computeNext
	
	
.reg fib0,  %a
.reg fib1,  %b
.reg fib2,  %c
.reg other, %d
.const busOutput, $0

	ldc fib0, $1
	ldc fib1, $1

computeNext:
	ldc other, busOutput
	add fib2, fib0, fib1   # c = a + b
	stb other, fib2       # *0 = c
	
	add fib0, fib1, fib2   # a = b + c
	stb other, fib0       # *0 = a
	
	add fib1, fib2, fib0   # b = c + a
	stb other, fib1       # *0 = b
	
	
	ldc other, computeNext
	jmp other
